  name: Testing and deployment of a Django Project

  on:
    push:
      branches:
        - ci
        - master
  jobs:
    testing:
      runs-on: ubuntu-22.04
      env:
        KEY_SECRET: ${{ secrets.DJANGO_SECRET }}
        IS_DEBUG: ${{ secrets.DJANGO_DEBUG }}
        ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
        ENGINE: ${{ secrets.DATABASE_ENGINE }}
        USER: ${{ secrets.DATABASE_USER }}
        PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        HOST: ${{ secrets.DATABASE_HOST }}
        NAME: ${{ secrets.DATABASE_NAME }}
        PORT: ${{ secrets.DATABASE_PORT }}
      services:
        postgres_main:
          image: postgres:12
          env:
            POSTGRES_DB: ${{ env.NAME }}
            POSTGRES_USER: ${{ env.USER }}
            POSTGRES_PASSWORD: ${{ env.PASSWORD }}
          ports:
            - 5432:5432
          options:
            --health-cmd pg_isready 
            --health-interval 5s 
            --health-timeout 5s 
            --health-retries 5
      steps:
        - name: Проверка наличия изменений в репозитории
          uses: actions/checkout@v3

        - name: Установка Python и доп библиотек
          uses: actions/setup-python@v4
          with:
            python-version: '3.11'

        - name: Установка зависимостей проекта
          run: pip install -r requirements.txt

        - name: Линтинг (PEP8)
          run: flake8 logistic --exclude logistic/migrations/

        - name: Тестирование
          run: python manage.py test
          env:
            SECRET_KEY: ${{ env.KEY_SECRET }}
            DEBUG: ${{ env.IS_DEBUG }}
            ALLOWED_HOSTS: ${{ env.ALLOWED_HOSTS }}
            DB_ENGINE: ${{ env.ENGINE }}
            DB_USER: ${{ env.USER }}
            DB_PASSWORD: ${{ env.PASSWORD }}
            DB_HOST: ${{ env.HOST }}
            DB_NAME: ${{ env.NAME }}
            DB_PORT: ${{ env.PORT }}
  #       run: pytest

        - name: Деплой
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USER }}
            password: ${{ secrets.SSH_PASS }}
            script: expect /home/andrey/django_cicd/deploy.exp

#              cd /home/andrey/django_cicd
#              git pull origin ci  # Загрузка изменений
#              source env/bin/activate # Включаем вирт. окружение
#              pip install -r requirements.txt # Установка доп. библиотек
#              python manage.py migrate
#              sudo systemctl restart gunicorn # Запускаем gunicorn, чтобы он увидел
#                                              # новую конфигурацию проекта


